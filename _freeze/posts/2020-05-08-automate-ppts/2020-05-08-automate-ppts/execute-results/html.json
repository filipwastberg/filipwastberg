{
  "hash": "cd4feabd923f052e161d0e747ab1c21c",
  "result": {
    "markdown": "---\ntitle: \"Automatisera PowerPoints med R\"\nauthor: \"Filip Wästberg\"\ndate: \"2020-05-08\"\ncategories: [open data]\nimage: solita-pres.png\n---\n\n\nJag skulle påstå att PowerPoint tillsammans med Excel är det överlägset vanligaste sättet att rapportera analytiska resultat. I min roll som konsult har jag träffat många analytiker som önskar att de kunde lägga mindre tid på att ta fram PowerPoints och mer tid på faktisk analys. \n\nMed paketet officer kan du enkelt skapa PowerPoints från R och dessutom utnyttja din organisations mall.\n\nFörst behöver vi lite data. Den tar vi ner från Tilastokeskus - Finlands statistikcentral med hjälp av paketet `pxweb`. Nedan hämtar vi data för befokningsmängden i Finland sedan 1750.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(pxweb)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\npxweb 0.13.1: R tools for the PX-WEB API.\nhttps://github.com/ropengov/pxweb\n```\n:::\n\n```{.r .cell-code}\npxweb_query_list <- \n  list(\"Vuosi\"= as.character(1750:2021),\n       \"Sukupuoli\"=c(\"SSS\"),\n       \"Tiedot\"=c(\"vaesto\"))\n\n# Download data \npx_data <- \n  pxweb_get(url = \"https://statfin.stat.fi/PXWeb/api/v1/sv/StatFin/vaerak/statfin_vaerak_pxt_11rb.px\",\n            query = pxweb_query_list)\n\n# Convert to data.frame \npx_data_frame <- as.data.frame(px_data, column.name.type = \"text\", variable.value.type = \"text\")\n\nhead(px_data_frame)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    År    Kön Befolkning 31.12.\n1 1750 Totalt            421500\n2 1751 Totalt            429900\n3 1752 Totalt            437600\n4 1753 Totalt            445300\n5 1754 Totalt            450100\n6 1755 Totalt            457800\n```\n:::\n:::\n\n\nNästa steg är att städa data lite.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr, warn.conflicts = FALSE)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'dplyr' was built under R version 4.1.2\n```\n:::\n\n```{.r .cell-code}\nlibrary(janitor, warn.conflicts = FALSE) ## Paket för att bland annat städa upp namn på kolumner \npopulation_df <- px_data_frame %>%\n  janitor::clean_names() %>% \n  rename(year = ar, population = befolkning_31_12) %>%\n  mutate(year = as.numeric(year))\n```\n:::\n\n\nI min visualisering använder jag paketet `hrbrthemes` som har ett tema jag tycker om.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Cite the data as \nlibrary(ggplot2)\nlibrary(hrbrthemes)\npopulation_plot <- population_df %>% \n\tggplot(aes(year, population)) +\n\tgeom_line(size = 2) +\n\tscale_y_continuous(labels = scales::number) +\n\ttheme_ipsum(base_size = 20,\n\t\t\t\t\t\t\t\t\t\t\t\t\tplot_title_size = 40,\n\t\t\t\t\t\t\t\t\t\t\t\t\tsubtitle_size = 30,\n\t\t\t\t\t\t\t\t\t\t\t\t\tcaption_size = 15,\n\t\t\t\t\t\t\t\t\t\t\t\t\taxis_title_size = 15) +\n\tlabs(\n\t\ttitle = \"Size of Finnish population since 1750\",\n\t\tsubtitle = \"At the 31st of December every year\",\n\t\tx = \"Year\",\n\t\ty = \"Size of population\",\n\t\tcaption = \"Source: Tilastokeskus/Statistikcentralen i Finland\"\n\t) +\n\ttheme(text = element_text(size = 50))\n\npopulation_plot\n```\n\n::: {.cell-output-display}\n![](2020-05-08-automate-ppts_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\nVisualiseringen är lite stor, men den kommer att se bättre ut i en PowerPoint.\n\nNu ska vi lägga in det här i en powerpoint. För att göra det använder jag paketet `officer`.\n\nI slutet av förra året gick det företag jag arbetar för `Ferrologic Analytics` samman med ett finskt bolag som heter `Solita`. Så jag tänkte att jag kunde använda deras PowerPoint-mall för att skapa PowerPointen. \n\nFörst läser jag in PowerPoint-filen och undersöker dess `layouts`. Dessa motsvarar valen du kan göra när du klickar på `Ny slide` i PowerPoint.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(officer)\nsolita_pres <- read_pptx(\"solita-pres-mall.pptx\")\n\nlayout_summary(solita_pres) %>% \n  head()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n            layout master\n1       Otsikkodia Solita\n2 Osan ylätunniste Solita\n3 Section Header 2 Solita\n4 Section Header 3 Solita\n5 Section Header 4 Solita\n6 Section Header 5 Solita\n```\n:::\n:::\n\n\nSom ni ser är layout-formatteringen på finska, men öppnar du PowerPoint-filen ser du att *Otsikkodia* står för Titel-slide. \n\nVarje layout har så kallade *placeholders* som är fördefinierade rutor gjorda för grafer, text, tabeller m.m. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlayout_properties(solita_pres, \"Otsikkodia\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   master_name       name     type id   ph_label\n4       Solita Otsikkodia     body 10  Graphic 4\n7       Solita Otsikkodia     body  6  Graphic 8\n74      Solita Otsikkodia ctrTitle  2    Title 1\n75      Solita Otsikkodia subTitle  3 Subtitle 2\n                                ph      offx     offy        cx        cy\n4                             <NA> 0.6692913 1.929134 11.732283 5.0787402\n7                             <NA> 0.6692913 1.929134 11.732283 5.0787402\n74         <p:ph type=\"ctrTitle\"/> 0.8858257 2.283465 11.529104 3.7795276\n75 <p:ph type=\"subTitle\" idx=\"1\"/> 0.8858268 6.358268  9.421979 0.6299213\n```\n:::\n:::\n\nGenom att ta en graf och lägga den i en placeholder kommer R alltid att skala grafen korrekt och du behöver inte oroa dig över bredd, höjd eller upplösning.\n\nVi börjar med att lägga till en titel-slide, notera här att vi använder `ph_location_type` för att identifiera vår placeholder type `ctrTitle`.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nppt_pres <- solita_pres %>% \n\tadd_slide(layout = \"Otsikkodia\", master = \"Solita\") %>% \n\tph_with(value = \"Made In R\", location = ph_location_type(type = \"ctrTitle\"))\n```\n:::\n\n\nFör att lägga till vår graf använder vi oss av en annan layout men här använder `ph_location_fullsize` som helt enkelt tar grafen och gör så att den tar upp hela vår slide. Vi hade också kunnat specificera en *location* här.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nppt_pres <- ppt_pres %>% \n  add_slide(layout = \"Otsikko ja sisältö\", master = \"Solita\") %>% \n\tph_with(value = population_plot,\n\t\t\t\t\t\t\t\t\tlocation = ph_location_fullsize())\n```\n:::\n\n\nSlutligen printar vi hela presentationen: \n\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(ppt_pres, \"solita-forest-pres.pptx\")\n```\n:::\n\n\nSom kommer att se ut så här:\n\n![](/post/2020-05-28-automatisera-powerpoints-i-r_files/solita-pres.png)",
    "supporting": [
      "2020-05-08-automate-ppts_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}