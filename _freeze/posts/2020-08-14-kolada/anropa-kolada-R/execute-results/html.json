{
  "hash": "d12a277857942ad4709cdffc19c59334",
  "result": {
    "markdown": "---\ntitle: \"Hämta data från Kolada till R\"\nauthor: \"Filip Wästberg\"\ndate: \"2020-08-14\"\ncategories: [open data, kolada]\n---\n\n\nI ett tidigare inlägg tittade jag på hur man kan [hämta data direkt från SCB till R](https://dataland.rbind.io/blog/hamta-data-direkt-fr%C3%A5n-scb-till-r/) med hjälp av paketet `pxweb`. \n\nSCB har massa intressant data men mycket är på en nationell nivå. En annan datakälla, som är helt inriktad på kommunal och regional statistik, är Kolada, som är Sveriges kommuner och regioners (SKR) webbtjänst för regional statistik. \n\nLikt SCB har Kolada ett gränssnitt på webben, och precis som SCB har de också ett öppet API. Love Hansson, som är analytiker på Pensionsmyndigheten, har byggt ett paket för att anropa Kolada från R. Det här innebär att om du jobbar mycket med kommunal eller regional statistik kan du med hjälp av R-skript automatisera all inhämtning och rapportering av regional statistik från Kolada.\n\n## rKolada\n\nPaketet installeras enkelt med `install.packages(\"rKolada\")`.\n\nFör att få en övergripande bild över Koladas datamodell och paketet `rKolada` kan jag varmt rekommendera Love Hanssons vignette som finns [här](https://lchansson.github.io/rKolada/articles/introduction-to-rkolada.html).\n\n## Hur Kolada fungerar\n\nPå Koladas hemsida kan du enkelt söka efter olika KPI-er. Där kan du också få en enkel tabell och visualisering av resultatet. `rKolada` ger oss möjlighet att programmatiskt ta ut dessa tabeller, vilket underlättar om vi behöver ta ut statistik fler gånger än en. \n\nMed funktionen `get_kpi()` får vi en tabell med alla KPI-er som finns tillgängliga. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(rKolada)\nlibrary(tidyverse)\n\nkpis <- get_kpi()\n\nkpis\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5,522 × 13\n   auspices description      has_ou_data id    is_divided_by_g… municipality_ty…\n   <chr>    <chr>            <lgl>       <chr>            <int> <chr>           \n 1 E        Personalkostnad… NA          N000…                0 K               \n 2 E        Personalkostnad… FALSE       N000…                0 K               \n 3 X        Kommunalekonomi… FALSE       N000…                0 K               \n 4 <NA>     Externa intäkte… FALSE       N000…                0 K               \n 5 <NA>     Inkomstutjämnin… FALSE       N000…                0 K               \n 6 <NA>     Kostnadsutjämni… FALSE       N000…                0 K               \n 7 X        Regleringsbidra… FALSE       N000…                0 K               \n 8 <NA>     Utjämningssyste… FALSE       N000…                0 K               \n 9 X        Införandebidrag… FALSE       N000…                0 K               \n10 X        Strukturbidrag,… FALSE       N000…                0 K               \n# … with 5,512 more rows, and 7 more variables: operating_area <chr>,\n#   ou_publication_date <chr>, perspective <chr>, prel_publication_date <chr>,\n#   publ_period <chr>, publication_date <chr>, title <chr>\n```\n:::\n:::\n\n\nVi kan filtrera dessa med `dplyr` och `stringr` eller använda den inbyggda funktionen `kpi_search()`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nkpi_bygglov <- kpi_search(kpis, c(\"bostäder som beviljats bygglov\"), column = \"description\")\n\nkpi_bygglov\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 13\n  auspices description       has_ou_data id    is_divided_by_g… municipality_ty…\n  <chr>    <chr>             <lgl>       <chr>            <int> <chr>           \n1 X        Antal bostäder s… FALSE       N079…                0 K               \n# … with 7 more variables: operating_area <chr>, ou_publication_date <chr>,\n#   perspective <chr>, prel_publication_date <chr>, publ_period <chr>,\n#   publication_date <chr>, title <chr>\n```\n:::\n:::\n\n\nFör att få ner data för detta KPI behöver 1) ett ID och 2) specificera vilken eller vilka kommuner du vill ha data för.\n\nID får du enkelt ut genom `kpi_extract_ids()`. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nkpi_extract_ids(kpi_bygglov)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"N07925\"\n```\n:::\n:::\n\n\nDe kommuner, eller regionala indelningar som finns, kan vi på motsvarande sätt få genom `get_municipality()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nget_municipality()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 312 × 3\n   id    title      type \n   <chr> <chr>      <chr>\n 1 1440  Ale        K    \n 2 1489  Alingsås   K    \n 3 0764  Alvesta    K    \n 4 0604  Aneby      K    \n 5 1984  Arboga     K    \n 6 2506  Arjeplog   K    \n 7 2505  Arvidsjaur K    \n 8 1784  Arvika     K    \n 9 1882  Askersund  K    \n10 2084  Avesta     K    \n# … with 302 more rows\n```\n:::\n:::\n\n\nEn bra sak med Kolada är att de för alla Sveriges kommuner har referenskommuner, kommuner som på olika sätt liknar kommunen du är intresserad av. På så sätt kan vi enkelt ta fram kommuner som är relevanta att jämföra med. I `rKolada` gör vi det med `get_municipality_groups()` och den tillhörande *search*-funktionen. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nget_municipality_groups() %>% \n  municipality_grp_search(\"Finspång\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 11 × 3\n   id      members      title                                               \n   <chr>   <list>       <chr>                                               \n 1 G175948 <df [7 × 2]> Liknande kommuner ekonomiskt bistånd, Finspång, 2020\n 2 G176238 <df [7 × 2]> Liknande kommuner socioekonomi, Finspång, 2020      \n 3 G176528 <df [7 × 2]> Liknande kommuner äldreomsorg, Finspång, 2021       \n 4 G35908  <df [7 × 2]> Liknande kommuner grundskola, Finspång, 2021        \n 5 G36200  <df [7 × 2]> Liknande kommuner gymnasieskola, Finspång, 2021     \n 6 G36492  <df [7 × 2]> Liknande kommuner IFO, Finspång, 2021               \n 7 G37368  <df [7 × 2]> Liknande kommuner, övergripande, Finspång, 2021     \n 8 G39541  <df [7 × 2]> Liknande kommuner LSS, Finspång, 2021               \n 9 G85502  <df [7 × 2]> Liknande kommuner fritidshem, Finspång, 2021        \n10 G85794  <df [7 × 2]> Liknande kommuner förskola, Finspång, 2021          \n11 G87668  <df [7 × 2]> Liknande kommuner integration, Finspång, 2021       \n```\n:::\n:::\n\n\nI slutändan har vi nu all metadata vi behöver och vill då få in den faktiska datan. För att få tag i den använder vi bara `get_values()`, då får vi tillbaka en data.frame med all data som vi frågat efter. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nkpi_id <- kpi_search(kpis, c(\"bostäder som beviljats bygglov\"),\n                                  column = \"description\") %>% \n  kpi_extract_ids()\n\nmunic_grp <- get_municipality_groups() %>%\n  municipality_grp_search(\"Liknande kommuner socioekonomi, Finspång\") %>% \n  municipality_grp_extract_ids()\n\nfinspang_id <- get_municipality() %>%\n  municipality_search(\"Finspång\") %>% \n  municipality_extract_ids()\n\n# Get values\ngrp_data <- get_values(\n  kpi = kpi_id,\n  municipality = c(\n    munic_grp,\n    finspang_id\n  )\n)\n\ngrp_data\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 56 × 8\n   kpi    municipality_id  year count gender value municipality municipality_ty…\n   <chr>  <chr>           <int> <int> <chr>  <dbl> <chr>        <chr>           \n 1 N07925 0562             2015     1 T       0.7  Finspång     K               \n 2 N07925 1272             2015     1 T       6    Bromölla     K               \n 3 N07925 1273             2015     1 T       1.8  Osby         K               \n 4 N07925 1884             2015     1 T       3    Nora         K               \n 5 N07925 1885             2015     1 T       5.6  Lindesberg   K               \n 6 N07925 1961             2015     1 T       3.6  Hallstahamm… K               \n 7 N07925 1981             2015     1 T       3.8  Sala         K               \n 8 N07925 1984             2015     1 T       0.9  Arboga       K               \n 9 N07925 0562             2016     1 T       3.62 Finspång     K               \n10 N07925 1272             2016     1 T       5.15 Bromölla     K               \n# … with 46 more rows\n```\n:::\n:::\n\n\nVi har nu data som antingen kan visualiseras, inkluderas i en Rmarkdown-genererad PDF-rapport, skrivas till en Excel, PowerPoint, lagra i en databas med mera. \n\nHär nöjer vi oss med en enkel visualisering:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(grp_data, aes(x = year, y = value, color = municipality)) +\n  geom_line() +\n  labs(\n    title = \"Antal bostäder som beviljats bygglov under två senaste åren\",\n    subtitle = \"Antal/100 invånare\",\n    caption = \"Källa: SKR och SCB\",\n    y = \"Antal/1000 invånare\",\n    x = \"År\",\n    color = \"Kommun\"\n  ) +\n  theme_minimal() +\n  ggthemes::scale_color_colorblind()\n```\n\n::: {.cell-output-display}\n![](anropa-kolada-R_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nEtt stort tack till Love Hansson som lagt tid på att designa ett paket som jag tror kan underlätta för många analytiker på myndigheter, universitet och ute bland Sveriges kommuner och landsting. \n\n/ Filip\n\n\n\n\n\n\n\n\n",
    "supporting": [
      "anropa-kolada-R_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}